{"version":3,"file":"floating-window.component.js","sourceRoot":"","sources":["file:///C:/Users/yujuiting/Documents/projects/ng2-window-view/example/src/window-view-layer-usage/floating-window.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqC,eAAe,CAAC,CAAA;AACrD,iBAA6C,WAAW,CAAC,CAAA;AACzD,iBAAkC,WAAW,CAAC,CAAA;AAQ9C;IACE,iCAAoB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;QASjD;;;;;;;;;WASG;QACH,aAAQ,GAAY,IAAI,CAAC;QACzB,mBAAc,GAAY,KAAK,CAAC;QAnB9B,IAAI,CAAC,KAAK,GAAG,qBAAmB,UAAU,CAAC,MAAQ,CAAC;IACtD,CAAC;IAuBD,sBAAI,6CAAQ;QAHZ;;WAEG;aACH,cAA2C,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;aACtF,UAAa,KAA+B,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;;;OADN;IAGtF,6CAAW,GAAX;QACE;;;WAGG;QACH,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IA9BD;QAAC,gBAAS,CAAC,+BAA4B,CAAC;;wEAAA;IAX1C;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,gCAAgC;YAC7C,UAAU,EAAE,CAAC,+BAA4B,CAAC;SAC3C,CAAC;;+BAAA;IAqCF,8BAAC;AAAD,CAAC,AApCD,IAoCC;AApCY,+BAAuB,0BAoCnC,CAAA","sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { WindowViewContainerComponent } from '../../../';\r\nimport { WindowViewService } from '../../../';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'simple-window',\r\n  templateUrl: 'floating-window.component.html',\r\n  directives: [WindowViewContainerComponent]\r\n})\r\nexport class FloatingWindowComponent {\r\n  constructor(private windowView: WindowViewService) {\r\n    this.title = `Floating Window ${windowView.length}`;\r\n  }\r\n\r\n  @ViewChild(WindowViewContainerComponent)\r\n  windowViewContainer: WindowViewContainerComponent;\r\n\r\n  title: string;\r\n\r\n  /**\r\n   * Following setting are necessary.\r\n   * \r\n   * 1. If enable `floating` and provide `WindowViewLayerService`,\r\n   *    `WindowViewContainerComponent` will auto hide it's container.\r\n   *    Without container, user can touch anything under that window view.\r\n   * \r\n   * 2. Click on background of `WindowViewContainerComponent` will trigger\r\n   *    close event. For multi-floating-window case, we have to disable it.\r\n   */\r\n  floating: boolean = true;\r\n  showBackground: boolean = false;\r\n\r\n  /**\r\n   * Passby property position for setup\r\n   */\r\n  get position(): { x: number, y: number } { return this.windowViewContainer.position; }\r\n  set position(value: { x: number, y: number }) { this.windowViewContainer.position = value; }\r\n\r\n  closeWindow() {\r\n    /**\r\n     * Because order of closing window no longer stable.\r\n     * We have remove window with specific target.\r\n     */\r\n    this.windowView.removeWindowByInstance(this);\r\n  }\r\n}"]}